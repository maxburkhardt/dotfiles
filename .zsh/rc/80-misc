##
##  Miscellaneous Functions
##

# display colors
_cols()
{
  local esc="\033["
  print "\t 40\t 41\t 42\t 43\t 44\t 45\t 46\t 47"
  for fore in 30 31 32 33 34 35 36 37; do
    local line1="$fore  "
    local line2="    "
    for back in 40 41 42 43 44 45 46 47; do
      local line1="${line1}${esc}${back};${fore}m Normal  ${esc}0m"
      local line2="${line2}${esc}${back};${fore};1m Bold    ${esc}0m"
    done
    print "$line1\n$line2"
  done
}

# Thirsty ?
beer()
{
  print "         _.._..,_,_"
  print "        (          )"
  print "         ]~,\"-.-~~["
  print "       .=])' (;  ([    Prost!"
  print "       | ]:: '    ["
  print "       '=]): .)  (["
  print "         |:: '    |"
  print "          ~~----~~"
}

# Code review function
# See https://msdn.microsoft.com/en-us/library/bb288454.aspx
function find_banned_funcs() {
  for func in strcpy strcpyA strcpyW wcscpy _tcscpy _mbscpy StrCpy \
  StrCpyA StrCpyW lstrcpy lstrcpyA lstrcpyW _tccpy _mbccpy _ftcscpy \
  strncpy wcsncpy _tcsncpy _mbsncpy _mbsnbcpy StrCpyN StrCpyNA StrCpyNW \
  StrNCpy strcpynA StrNCpyA StrNCpyW lstrcpyn lstrcpynA lstrcpynW strcat \
  strcatA strcatW wcscat _tcscat _mbscat StrCat StrCatA StrCatW lstrcat \
  lstrcatA lstrcatW StrCatBuff StrCatBuffA StrCatBuffW StrCatChainW _tccat \
  _mbccat _ftcscat strncat wcsncat _tcsncat _mbsncat _mbsnbcat StrCatN StrCatNA \
  StrCatNW StrNCat StrNCatA StrNCatW lstrncat lstrcatnA lstrcatnW lstrcatn \
  sprintfW sprintfA wsprintf wsprintfW wsprintfA sprintf swprintf _stprintf \
  wvsprintf wvsprintfA wvsprintfW vsprintf _vstprintf vswprintf wvsprintf \
  wvsprintfA wvsprintfW vsprintf _vstprintf vswprintf strncpy wcsncpy _tcsncpy \
  _mbsncpy _mbsnbcpy StrCpyN StrCpyNA StrCpyNW StrNCpy strcpynA StrNCpyA \
  StrNCpyW lstrcpyn lstrcpynA lstrcpynW _fstrncpy strncat wcsncat _tcsncat \
  _mbsncat _mbsnbcat StrCatN StrCatNA StrCatNW StrNCat StrNCatA StrNCatW \
  lstrncat lstrcatnA lstrcatnW lstrcatn _fstrncat gets _getts _gettws \
  IsBadWritePtr IsBadHugeWritePtr IsBadReadPtr IsBadHugeReadPtr IsBadCodePtr \
  IsBadStringPtr memcpy RtlCopyMemory CopyMemory wmemcpy; do
    ag -i $func #1>/dev/null
    # if [ $? -eq 0 ]; then
    #   echo $func "found"
    # fi
  done
}

# vim: ft=zsh
